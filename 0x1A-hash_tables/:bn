#include "hash_tables.h"

/**
 * hash_table_set - adds an elemnt to the hash table
 * @ht: hash table
 * @key: key of element
 * @value: value of element
 *
 * Return: 1 if it succeeded, 0 otherwise
 */
int hash_table_set(hash_table_t *ht, const char *key, const char *value)
{
	hash_node_t *new, *current;
	unsigned long int index;

	if (!ht || !key || !(*key) || !value)
		return (0);
	new = malloc(sizeof(hash_node_t));
	if (!new)
		return (0);
	new->key = strdup(key);
	new->value = strdup(value);
	new->next = NULL;
	index = key_index((const unsigned char *)key, ht->size);
	current = ht->array[index];
	if (current)
	{
		if (!(strcmp(current->key, key)))
		{
			strcpy(ht->array[index]->value, value);
			return (1);
		}
		else
			new->next = current;
	}
	ht->array[index] = new;
	return (1);
}
